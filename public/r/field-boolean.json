{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "field-boolean",
  "type": "registry:component",
  "title": "FieldBoolean",
  "description": "",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/shared/auto-form/field-scalars/field-boolean.tsx",
      "content": "\"use client\";\n\nimport {\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { FieldRoot, FieldRootProps } from \"./field-root\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { ComponentProps, ReactNode, useId } from \"react\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\n\nexport type FieldBooleanProps = FieldRootProps;\n\nexport function FieldBoolean(props: FieldBooleanProps) {\n  const id = useId();\n  return (\n    <FieldRoot\n      {...props}\n      render={({ field, fieldSchema, form }) => {\n        return (\n          <div className=\"border-input has-data-[state=checked]:border-primary/50 relative flex w-full items-start gap-2 rounded-md border p-4 shadow-xs outline-none\">\n            <Switch\n              id={id}\n              className=\"order-1 h-4 w-6 after:absolute after:inset-0 [&_span]:size-3 data-[state=checked]:[&_span]:translate-x-2 data-[state=checked]:[&_span]:rtl:-translate-x-2\"\n              aria-describedby={`${id}-description`}\n              checked={field.value}\n              defaultChecked={false}\n              onCheckedChange={field.onChange}\n            />\n            <div className=\"grid grow gap-2\">\n              <FormLabel htmlFor={id}>\n                {fieldSchema.props.name}\n                {/* <span className=\"text-muted-foreground text-xs leading-[inherit] font-normal\">\n                  (Sublabel)\n                </span> */}\n              </FormLabel>\n              <div\n                id={`${id}-description`}\n                className=\"text-muted-foreground text-xs\"\n              >\n                <FormDescription>\n                  {fieldSchema.meta?.description}\n                </FormDescription>\n              </div>\n              <FormMessage />\n            </div>\n          </div>\n        );\n      }}\n    />\n  );\n}\n\nexport type FieldCheckboxProps = ComponentProps<typeof Checkbox> & {\n  label?: ReactNode;\n  description?: ReactNode;\n  sublabel?: ReactNode;\n};\nexport function FieldCheckbox(props: FieldCheckboxProps) {\n  const id = useId();\n  const checked =\n    typeof props.value == \"undefined\" ? \"indeterminate\" : !!props.value;\n  return (\n    <div className=\"border-input  has-data-[state=checked]:border-primary/50 relative flex w-full items-start gap-2 rounded-md border p-2 shadow-xs outline-none\">\n      <Checkbox\n        className=\"order-1 after:absolute after:inset-0 \"\n        aria-describedby={`${id}-description`}\n        {...props} // Spread the props to Checkbox\n        id={id}\n        checked={checked}\n      />\n      <div className=\"grid grow gap-2\">\n        <FormLabel htmlFor={id}>\n          {props.label}\n          <span className=\"text-muted-foreground text-xs leading-[inherit] font-normal\">\n            {props.sublabel}\n          </span>\n        </FormLabel>\n        <div id={`${id}-description`} className=\"text-muted-foreground text-xs\">\n          {props.description}\n        </div>\n        <FormMessage />\n      </div>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "shared/auto-form/field-scalars/field-boolean.tsx"
    }
  ]
}