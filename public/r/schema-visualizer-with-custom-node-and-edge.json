{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "schema-visualizer-with-custom-node-and-edge",
  "type": "registry:file",
  "title": "schema-visualizer-with-custom-node-and-edge",
  "description": "With custom node and edge",
  "dependencies": [],
  "registryDependencies": [
    "https://futurjs.vercel.app/r/schema-visualizer.json"
  ],
  "files": [
    {
      "path": "src/_exemples/schema-visualizer/With custom node and edge/schema-data.ts",
      "content": "import type { Node, Edge } from \"@xyflow/react\";\n\n// Define the initial nodes (tables)\nexport const initialNodes: Node[] = [\n  {\n    id: \"users\",\n    type: \"tableNode\",\n    position: { x: 800, y: 150 },\n    data: {\n      label: \"users\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"full_name\", type: \"varchar\" },\n        { name: \"email\", type: \"varchar\" },\n        { name: \"gender\", type: \"varchar\" },\n        { name: \"date_of_birth\", type: \"date\" },\n        { name: \"country_code\", type: \"varchar\", isForeign: true },\n        { name: \"created_at\", type: \"timestamp\" },\n      ],\n    },\n  },\n  {\n    id: \"orders\",\n    type: \"tableNode\",\n    position: { x: 450, y: 183 },\n    data: {\n      label: \"orders\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"user_id\", type: \"int\", isForeign: true },\n        { name: \"status\", type: \"varchar\" },\n        { name: \"total_amount\", type: \"decimal\" },\n        { name: \"created_at\", type: \"timestamp\" },\n      ],\n    },\n  },\n  {\n    id: \"order_items\",\n    type: \"tableNode\",\n    position: { x: 100, y: 150 },\n    data: {\n      label: \"order_items\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"order_id\", type: \"int\", isForeign: true },\n        { name: \"product_id\", type: \"int\", isForeign: true },\n        { name: \"quantity\", type: \"int\" },\n        { name: \"unit_price\", type: \"decimal\" },\n      ],\n    },\n  },\n  {\n    id: \"products\",\n    type: \"tableNode\",\n    position: { x: 100, y: 460 },\n    data: {\n      label: \"products\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"merchant_id\", type: \"int\", isForeign: true },\n        { name: \"name\", type: \"varchar\" },\n        { name: \"description\", type: \"text\" },\n        { name: \"price\", type: \"decimal\" },\n        { name: \"status\", type: \"varchar\" },\n        { name: \"created_at\", type: \"timestamp\" },\n      ],\n    },\n  },\n  {\n    id: \"merchants\",\n    type: \"tableNode\",\n    position: { x: 450, y: 493 },\n    data: {\n      label: \"merchants\",\n      fields: [\n        { name: \"id\", type: \"int\", isPrimary: true },\n        { name: \"name\", type: \"varchar\" },\n        { name: \"email\", type: \"varchar\" },\n        { name: \"country_code\", type: \"varchar\", isForeign: true },\n        { name: \"created_at\", type: \"timestamp\" },\n      ],\n    },\n  },\n  {\n    id: \"countries\",\n    type: \"tableNode\",\n    position: { x: 800, y: 570 },\n    data: {\n      label: \"countries\",\n      fields: [\n        { name: \"code\", type: \"varchar\", isPrimary: true },\n        { name: \"name\", type: \"varchar\" },\n        { name: \"continent_name\", type: \"varchar\" },\n        { name: \"currency\", type: \"varchar\" },\n        {\n          name: \"nomfdjdgnkdngkdjngkdjngkdngkdngkdngkdngkdngkndkgndk\",\n          type: \"warol\",\n        },\n      ],\n    },\n  },\n];\n\n// Define the edges (relationships) between tables with specific column connections\nexport const initialEdges: Edge[] = [\n  // User to Orders (one-to-many): users.id -> orders.user_id\n  {\n    id: \"users-orders\",\n    source: \"users\",\n    target: \"orders\",\n    sourceHandle: \"id\",\n    targetHandle: \"user_id\",\n  },\n  // Orders to Order Items (one-to-many): orders.id -> order_items.order_id\n  {\n    id: \"orders-order_items\",\n    source: \"orders\",\n    target: \"order_items\",\n    sourceHandle: \"id\",\n    targetHandle: \"order_id\",\n  },\n  // Products to Order Items (one-to-many): products.id -> order_items.product_id\n  {\n    id: \"products-order_items\",\n    source: \"products\",\n    target: \"order_items\",\n    sourceHandle: \"id\",\n    targetHandle: \"product_id\",\n  },\n  // Merchants to Products (one-to-many): merchants.id -> products.merchant_id\n  {\n    id: \"merchants-products\",\n    source: \"merchants\",\n    target: \"products\",\n    sourceHandle: \"id\",\n    targetHandle: \"merchant_id\",\n  },\n  // Countries to Users (one-to-many): countries.code -> users.country_code\n  {\n    id: \"countries-users\",\n    source: \"countries\",\n    target: \"users\",\n    sourceHandle: \"code\",\n    targetHandle: \"country_code\",\n  },\n  // Countries to Merchants (one-to-many): countries.code -> merchants.country_code\n  {\n    id: \"countries-merchants\",\n    source: \"countries\",\n    target: \"merchants\",\n    sourceHandle: \"code\",\n    targetHandle: \"country_code\",\n  },\n];\n",
      "type": "registry:file",
      "target": "exemples/schema-visualizer/With custom node and edge/schema-data.ts"
    },
    {
      "path": "src/_exemples/schema-visualizer/With custom node and edge/main.tsx",
      "content": "\"use client\";\n\nimport { initialEdges, initialNodes } from \"./schema-data\";\nimport { SchemaVisualizer } from \"@/shared/prisma/block/schema-visualizer\";\n\nexport type MainProps = {};\n\nexport default function Main({}: MainProps) {\n  return (\n    <div className=\"min-h-[50svh] flex flex-col\">\n      <SchemaVisualizer\n        initialEdges={initialEdges}\n        initialNodes={initialNodes}\n      />\n    </div>\n  );\n}\n",
      "type": "registry:file",
      "target": "exemples/schema-visualizer/With custom node and edge/main.tsx"
    }
  ]
}