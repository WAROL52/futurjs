console.log("hello");
import { generatorHandler } from "@prisma/generator-helper";
import { Prisma } from "@/generated/prisma";
import { Edge, Node } from "@xyflow/react";
import { useQuery } from "@tanstack/react-query";
import { getPrismaSchema } from "@/shared/prisma/actions/prisma-actions";
import z, { ZodEnum, ZodType } from "zod/v4";
import * as fs from "fs";
import * as path from "path";

generatorHandler({
  onManifest() {
    return {
      defaultOutput: "../src/generated/dbSchema.ts",

      prettyName: "Prisma DB Schema Generator",
    };
  },
  async onGenerate(options) {
    const { dmmf, generator } = options;
    const outputPath = generator.output?.value || "../generated/dbSchema.ts";

    fs.writeFileSync(
      "./src/generated/datamodel.ts",
      `// This file is generated by the Prisma DB Schema Generator\n` +
        `// Do not edit this file manually\n\n` +
        `import { Prisma } from "@/generated/prisma";\n\n` +
        `// This is the Prisma datamodel generated from the schema.prisma file\n` +
        `// It contains all the models, enums, and indexes defined in the schema\n\n` +
        `// The datamodel is used to generate the Prisma client and the Prisma form\n` +
        `// It is also used to generate the xyflow nodes and edges for the Prisma form\n\n` +
        `// The datamodel is generated from the Prisma schema file\n` +
        `// It is not meant to be edited manually\n\n` +
        `export const datamodel: Prisma.DMMF.Datamodel = ${JSON.stringify(
          dmmf.datamodel,
          null,
          2
        )};\n`
    );
  },
});
